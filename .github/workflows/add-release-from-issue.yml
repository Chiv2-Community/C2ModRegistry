name: Process mod repository actions
on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  check-should-execute:
    runs-on: ubuntu-latest
    if: ${{ !github.event.issue.pull_request }}
    outputs:
      should_execute: ${{ steps.check.outputs.should_execute }}
    steps:
      - name: Check if this should execute
        id: check
        run: |
          shopt -s nocasematch
          SHOULD_EXECUTE=true

          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            if [[ "${{ github.event.comment.body }}" != "retry" ]]; then
              SHOULD_EXECUTE=false
            fi
          fi

          echo "should_execute=$SHOULD_EXECUTE" >> $GITHUB_OUTPUT
          
  parse-json:
    runs-on: ubuntu-latest
    needs: check-should-execute
    if: needs.check-should-execute.outputs.should_execute == 'true'
    outputs:
      json_payload: ${{ steps.issue_json_payload.outputs.payload }}
      failed: ${{ steps.issue_json_payload.outputs.failed }}
      action: ${{ steps.validate_payload.outputs.action }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with: 
          ref: main
          
      - name: Parse Json in Issue
        id: issue_json_payload
        run:
          ./.github/workflows/scripts/extract-issue-json-body.sh "${{ github.event.issue.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post failure Results for JSON parsing
        uses: peter-evans/create-or-update-comment@v4
        if: steps.issue_json_payload.outputs.failed == 'true'
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Failed to parse the JSON in the issue body. Copy and paste the appropriate template below and add it to
            the issue description. Fill out the fields with the correct details. When complete, respond 
            to this issue thread with "retry"

            For adding a new package:
            ````
            ```
            {
              "action": "add_package",
              "repo_url": "https://github.com/Username/ExampleMod"
            }
            ```
            ````

            For adding a release to an existing package:
            ````
            ```
            {
              "action": "add_package_release",
              "repo_url": "https://github.com/Username/ExampleMod",
              "release_tag": "v0.0.1"
            }
            ```
            ````
            Check out the [Unchained Discord](https://discord.gg/chiv2unchained) for support.

      - name: Validate JSON payload
        id: validate_payload
        if: steps.issue_json_payload.outputs.failed == 'false'
        run: |
          PAYLOAD='${{ steps.issue_json_payload.outputs.payload }}'
          ACTION=$(echo $PAYLOAD | jq -r '.action')
          if [[ "$ACTION" != "add_package" && "$ACTION" != "add_package_release" ]]; then
            echo "Invalid action: $ACTION. Must be either 'add_package' or 'add_package_release'" >> $GITHUB_STEP_SUMMARY
            echo "failed=true" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "action=$ACTION" >> $GITHUB_OUTPUT
          fi

      - name: Post failure Results for invalid action
        uses: peter-evans/create-or-update-comment@v4
        if: failure()
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Failed to validate the JSON in the issue body. The `action` field must be either `add_package` or `add_package_release`.

            Check out the [Unchained Discord](https://discord.gg/chiv2unchained) for support.
             
  process-repository-action:
    runs-on: ubuntu-latest
    needs: parse-json
    if: needs.parse-json.outputs.failed == 'false'
    permissions: write-all
    steps:
      - name: Confirmation Message
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: "Successfully parsed issue body. Attempting to ${{ needs.parse-json.outputs.action }} to package DB."

      - name: Generate branch name
        id: branch-name
        run: |
          if [[ "${{ needs.parse-json.outputs.action }}" == "add_package" ]]; then
            BRANCH_NAME="issue-${{ github.event.issue.number }}-add-package"
          else
            BRANCH_NAME="main"
          fi
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Checkout main branch
        uses: actions/checkout@v3
        with: 
          ref: main
          
      - name: Create new branch for add_package
        if: needs.parse-json.outputs.action == 'add_package'
        run: |
          git checkout -b ${{ steps.branch-name.outputs.branch_name }}
          
      - name: Process repository action
        id: update-package-list
        uses: Chiv2-Community/zero-infra-mod-registry@main
        continue-on-error: true
        with:
          command: ${{ needs.parse-json.outputs.action }}
          repo_url: ${{ fromJson(needs.parse-json.outputs.json_payload).repo_url }}
          release_tag: ${{ needs.parse-json.outputs.action == 'add_package_release' && fromJson(needs.parse-json.outputs.json_payload).release_tag || '' }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          log_level: INFO

      - name: Post failure Results 
        uses: peter-evans/create-or-update-comment@v4
        if: steps.update-package-list.outputs.failed == 'true'
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Failed to add release to package DB. Please check the logs below for more details.
            After addressing the errors, reply "retry"

            ```
            ${{ steps.update-package-list.outputs.result }}
            ```
            
            Check out the [Unchained Discord](https://discord.gg/chiv2unchained) for support.

      - name: Commit changes
        if: steps.update-package-list.outputs.failed == 'false'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: |
            ${{ needs.parse-json.outputs.action == 'add_package_release' && 'Add release' || 'Add package' }} for ${{ fromJson(needs.parse-json.outputs.json_payload).repo_url }}
            ${{ needs.parse-json.outputs.action == 'add_package_release' && format('Version: {0}', fromJson(needs.parse-json.outputs.json_payload).release_tag) || '' }}
            Issue: #${{ github.event.issue.number }}
          branch: ${{ steps.branch-name.outputs.branch_name }}
          add_options: '--all'
          file_pattern: 'package_db/* registry/*'
          
      - name: Create pull request
        if: steps.update-package-list.outputs.failed == 'false' && needs.parse-json.outputs.action == 'add_package'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO_NAME=$(echo "${{ fromJson(needs.parse-json.outputs.json_payload).repo_url }}" | sed -E 's|.*github.com/([^/]+/[^/]+).*|\1|' | sed 's|.git$||')
          PR_TITLE="Add package: $REPO_NAME"
          PR_BODY=$"Adds package from ${{ fromJson(needs.parse-json.outputs.json_payload).repo_url }}, Resolves #${{ github.event.issue.number }}"
          
          gh pr create \
            --title "$PR_TITLE" \
            --body "$PR_BODY" \
            --base main \
            --head ${{ steps.branch-name.outputs.branch_name }}
      
      - name: Post success results for add_package_release
        uses: peter-evans/create-or-update-comment@v4
        if: steps.update-package-list.outputs.failed == 'false' && needs.parse-json.outputs.action == 'add_package_release'
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Successfully added release to package DB.
            ```
            ${{ steps.update-package-list.outputs.result }}
            ```
            
      - name: Post success results for add_package
        uses: peter-evans/create-or-update-comment@v4
        if: steps.update-package-list.outputs.failed == 'false' && needs.parse-json.outputs.action == 'add_package'
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Successfully processed package addition and created a pull request.
            ```
            ${{ steps.update-package-list.outputs.result }}
            ```
            The PR will be linked to this issue and will close it automatically when merged.

      - name: Close Issue for release actions
        if: steps.update-package-list.outputs.failed == 'false' && needs.parse-json.outputs.action == 'add_package_release'
        run: gh issue close "${{ github.event.issue.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
